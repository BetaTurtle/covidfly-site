{"version":3,"sources":["components/ResultPage.js","components/HomePage.js","reportWebVitals.js","index.js"],"names":["ResultPage","sd","useParams","async","src","data-comments-app-website","data-limit","HomePage","props","state","redirect","newpath","value1","value2","handleChange1","bind","handleChange2","handleSubmit","event","this","setState","target","value","newroute","preventDefault","to","onSubmit","TextField","label","onChange","Button","type","variant","color","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","path","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAKe,SAASA,IAAc,IAE5BC,EAAOC,cAAPD,GAIN,OACE,qCAAE,8BACA,kDAAqBA,OAEvB,wBAAQE,OAAK,EAACC,IAAI,sCAAsCC,4BAA0B,WAAWC,aAAW,U,4DCsC/FC,E,kDAnCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IALRC,MAAQ,CACNC,UAAU,EACVC,QAAS,IAIT,EAAKF,MAAQ,CAAEG,OAAQ,GAAIC,OAAQ,IACnC,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBALH,E,iDAQnB,SAAcG,GAASC,KAAKC,SAAS,CAAER,OAAQM,EAAMG,OAAOC,U,2BAC5D,SAAcJ,GAASC,KAAKC,SAAS,CAAEP,OAAQK,EAAMG,OAAOC,U,0BAC5D,SAAaJ,GACX,IAAIK,EAAW,UAAYJ,KAAKV,MAAMG,OAAS,IAAMO,KAAKV,MAAMI,OAChEM,KAAKC,SAAS,CAAEV,UAAU,EAAMC,QAASY,IACzCL,EAAMM,mB,oBAGR,WAAU,IAAD,EACuBL,KAAKV,MAA3BC,EADD,EACCA,SAAUC,EADX,EACWA,QAClB,OAAID,EACK,cAAC,IAAD,CAAUe,GAAId,IAGrB,uBAAMe,SAAUP,KAAKF,aAArB,UACE,cAACU,EAAA,EAAD,CAAWC,MAAM,cAAcN,MAAOH,KAAKV,MAAMa,MAAOO,SAAUV,KAAKL,gBACvE,uBACA,cAACa,EAAA,EAAD,CAAWC,MAAM,YAAYN,MAAOH,KAAKV,MAAMa,MAAOO,SAAUV,KAAKH,gBACrE,uBACA,cAACc,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,YAAYC,MAAM,UAAhD,uB,GAhCeC,IAAMC,WCDdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCYd,SAASQ,IACP,OACE,cAAC,IAAD,UACE,gCACE,8BACE,6BACE,6BACE,cAAC,IAAD,CAAMpB,GAAG,IAAT,wBAON,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqB,KAAK,aAAaC,SAAU,cAAC/C,EAAD,MACnC,cAAC,IAAD,CAAO8C,KAAK,IAAZ,SACE,cAAC,EAAD,cAUZE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACL,EAAD,MAEFM,SAASC,eAAe,SAO1BhB,M","file":"static/js/main.cbea6404.chunk.js","sourcesContent":["\nimport {\n    useParams,\n  } from 'react-router-dom';\n  \nexport default function ResultPage() {\n\n    let { sd } = useParams();\n\n    // do sanity check before proceeding\n  \n    return (\n      <><div>\n        <h3>Info loading... {sd}</h3>\n      </div>\n      <script async src=\"https://comments.app/js/widget.js?3\" data-comments-app-website=\"Jy7bHnpa\" data-limit=\"50\"></script>\n      </>\n    );\n  }","\nimport React from 'react';\n\nimport {\n  Redirect,\n} from 'react-router-dom';\n\nimport {\n  Button,\n  TextField,\n} from '@material-ui/core';\n\n\nclass HomePage extends React.Component {\n  state = {\n    redirect: false,\n    newpath: \"\"\n  }\n  constructor(props) {\n    super(props);\n    this.state = { value1: '', value2: '' };\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange1(event) { this.setState({ value1: event.target.value }); }\n  handleChange2(event) { this.setState({ value2: event.target.value }); }\n  handleSubmit(event) {\n    var newroute = \"/route/\" + this.state.value1 + \"-\" + this.state.value2;\n    this.setState({ redirect: true, newpath: newroute });\n    event.preventDefault();\n  }\n\n  render() {\n    const { redirect, newpath } = this.state;\n    if (redirect) {\n      return <Redirect to={newpath} />;\n    }\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <TextField label=\"Where from?\" value={this.state.value} onChange={this.handleChange1} />\n        <br/>\n        <TextField label=\"Where to?\" value={this.state.value} onChange={this.handleChange2}></TextField>\n        <br/>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          GO\n        </Button>\n      </form>\n    );\n  }\n}\n\nexport default HomePage;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\n\n\nimport ResultPage from './components/ResultPage'\nimport HomePage from './components/HomePage'\n\nimport reportWebVitals from './reportWebVitals';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/route/:sd\" children={<ResultPage />} />\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}